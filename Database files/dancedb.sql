-- MySQL Script generated by MySQL Workbench
-- Mon Oct 20 10:02:26 2014
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema dancedb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema dancedb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `dancedb` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `dancedb` ;

-- -----------------------------------------------------
-- Table `dancedb`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dancedb`.`user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(45) NULL,
  `password` VARCHAR(45) NULL,
  `user_type` INT NULL,
  `first_name` VARCHAR(45) NULL,
  `last_name` VARCHAR(45) NULL,
  `birth_date` DATE NULL,
  `social_number` VARCHAR(45) NULL,
  `height` INT NULL,
  `shoe_size` DECIMAL(10,0) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dancedb`.`costume`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dancedb`.`costume` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `identifier` VARCHAR(45) NULL,
  `user_in_possesion` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `possesion_idx` (`user_in_possesion` ASC),
  CONSTRAINT `possesion`
    FOREIGN KEY (`user_in_possesion`)
    REFERENCES `dancedb`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dancedb`.`choreography`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dancedb`.`choreography` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  `music` VARCHAR(45) NULL,
  `rhythm` VARCHAR(45) NULL,
  `tempo` VARCHAR(45) NULL,
  `duration` INT NULL,
  `hard` BINARY NULL,
  `soft` BINARY NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dancedb`.`user_choreography`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dancedb`.`user_choreography` (
  `user_id` INT NOT NULL,
  `choreography_id` INT NOT NULL,
  PRIMARY KEY (`user_id`, `choreography_id`),
  INDEX `choreography_idx` (`choreography_id` ASC),
  CONSTRAINT `user`
    FOREIGN KEY (`user_id`)
    REFERENCES `dancedb`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `choreography`
    FOREIGN KEY (`choreography_id`)
    REFERENCES `dancedb`.`choreography` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dancedb`.`user_costume`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dancedb`.`user_costume` (
  `user_id` INT NOT NULL,
  `costume_id` INT NOT NULL,
  PRIMARY KEY (`user_id`, `costume_id`),
  INDEX `costume_idx` (`costume_id` ASC),
  CONSTRAINT `user`
    FOREIGN KEY (`user_id`)
    REFERENCES `dancedb`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `costume`
    FOREIGN KEY (`costume_id`)
    REFERENCES `dancedb`.`costume` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dancedb`.`group`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dancedb`.`group` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dancedb`.`user_group`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dancedb`.`user_group` (
  `user_id` INT NOT NULL,
  `group_id` INT NOT NULL,
  PRIMARY KEY (`user_id`, `group_id`),
  INDEX `group_idx` (`group_id` ASC),
  CONSTRAINT `user`
    FOREIGN KEY (`user_id`)
    REFERENCES `dancedb`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `group`
    FOREIGN KEY (`group_id`)
    REFERENCES `dancedb`.`group` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dancedb`.`training`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dancedb`.`training` (
  `id` INT NOT NULL,
  `group_id` INT NULL,
  `date` DATETIME NULL,
  `trainer_id` INT NULL,
  `finished` BINARY NULL,
  PRIMARY KEY (`id`),
  INDEX `user_idx` (`trainer_id` ASC),
  CONSTRAINT `user`
    FOREIGN KEY (`trainer_id`)
    REFERENCES `dancedb`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dancedb`.`user_training`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dancedb`.`user_training` (
  `user_id` INT NOT NULL,
  `training_id` INT NOT NULL,
  PRIMARY KEY (`user_id`, `training_id`),
  INDEX `training_idx` (`training_id` ASC),
  CONSTRAINT `user`
    FOREIGN KEY (`user_id`)
    REFERENCES `dancedb`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `training`
    FOREIGN KEY (`training_id`)
    REFERENCES `dancedb`.`training` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dancedb`.`choreography_file`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dancedb`.`choreography_file` (
  `choreography_id` INT NOT NULL,
  `file_name` VARCHAR(45) NOT NULL,
  `file_type` VARCHAR(45) NULL COMMENT 'This table can contain videos, test files (txt), music and others for the given choreography',
  PRIMARY KEY (`choreography_id`, `file_name`),
  CONSTRAINT `choreography`
    FOREIGN KEY (`choreography_id`)
    REFERENCES `dancedb`.`choreography` (`id`)
    ON DELETE RESTRICT
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dancedb`.`concert`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dancedb`.`concert` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  `location` VARCHAR(45) NULL,
  `start_time` VARCHAR(45) NULL,
  `end_time` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dancedb`.`concert_choreography`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dancedb`.`concert_choreography` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `concert_id` INT NOT NULL,
  `choreography_id` INT NOT NULL,
  `sequence_number` INT NULL,
  PRIMARY KEY (`id`, `concert_id`, `choreography_id`),
  INDEX `concert_idx` (`concert_id` ASC),
  INDEX `choreography_idx` (`choreography_id` ASC),
  CONSTRAINT `concert`
    FOREIGN KEY (`concert_id`)
    REFERENCES `dancedb`.`concert` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `choreography`
    FOREIGN KEY (`choreography_id`)
    REFERENCES `dancedb`.`choreography` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dancedb`.`concert_file`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dancedb`.`concert_file` (
  `concert_id` INT NOT NULL,
  `file_name` VARCHAR(45) NOT NULL,
  `file_type` VARCHAR(45) NULL,
  PRIMARY KEY (`concert_id`, `file_name`),
  CONSTRAINT `concert`
    FOREIGN KEY (`concert_id`)
    REFERENCES `dancedb`.`concert` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dancedb`.`concert_choreography_user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dancedb`.`concert_choreography_user` (
  `concert_choreography_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  `costume_id` INT NULL,
  PRIMARY KEY (`concert_choreography_id`, `user_id`),
  INDEX `user_idx` (`user_id` ASC),
  INDEX `costume_idx` (`costume_id` ASC),
  CONSTRAINT `user`
    FOREIGN KEY (`user_id`)
    REFERENCES `dancedb`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `concert_choreography`
    FOREIGN KEY (`concert_choreography_id`)
    REFERENCES `dancedb`.`concert_choreography` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `costume`
    FOREIGN KEY (`costume_id`)
    REFERENCES `dancedb`.`costume` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dancedb`.`ticket`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dancedb`.`ticket` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `type` VARCHAR(45) NULL,
  `price` DECIMAL(10,0) NULL,
  `total` INT NULL,
  `sold` INT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dancedb`.`concert_ticket`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dancedb`.`concert_ticket` (
  `concert_id` INT NOT NULL,
  `ticket_id` INT NOT NULL,
  PRIMARY KEY (`concert_id`, `ticket_id`),
  INDEX `ticket_idx` (`ticket_id` ASC),
  CONSTRAINT `concert`
    FOREIGN KEY (`concert_id`)
    REFERENCES `dancedb`.`concert` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `ticket`
    FOREIGN KEY (`ticket_id`)
    REFERENCES `dancedb`.`ticket` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dancedb`.`competition_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dancedb`.`competition_type` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  `solo` BINARY NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dancedb`.`competition_level`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dancedb`.`competition_level` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dancedb`.`competition`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dancedb`.`competition` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  `date` VARCHAR(45) NULL,
  `judges` VARCHAR(500) NULL,
  `musician` VARCHAR(500) NULL,
  `location` VARCHAR(45) NULL,
  `solo` VARCHAR(45) NULL,
  `competiton_type_id` INT NULL,
  `competition_level_id` INT NULL,
  `age_category` VARCHAR(45) NULL,
  `star` BINARY NULL,
  PRIMARY KEY (`id`),
  INDEX `competition_type_idx` (`competiton_type_id` ASC),
  INDEX `competition_level_idx` (`competition_level_id` ASC),
  CONSTRAINT `competition_type`
    FOREIGN KEY (`competiton_type_id`)
    REFERENCES `dancedb`.`competition_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `competition_level`
    FOREIGN KEY (`competition_level_id`)
    REFERENCES `dancedb`.`competition_level` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dancedb`.`competition_file`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dancedb`.`competition_file` (
  `competition_id` INT NOT NULL,
  `file_name` VARCHAR(45) NOT NULL,
  `file_type` VARCHAR(45) NULL,
  PRIMARY KEY (`competition_id`, `file_name`),
  CONSTRAINT `competition`
    FOREIGN KEY (`competition_id`)
    REFERENCES `dancedb`.`competition` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dancedb`.`competition_user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dancedb`.`competition_user` (
  `competition_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  `result` VARCHAR(45) NULL,
  PRIMARY KEY (`competition_id`, `user_id`),
  INDEX `user_idx` (`user_id` ASC),
  CONSTRAINT `competition`
    FOREIGN KEY (`competition_id`)
    REFERENCES `dancedb`.`competition` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `user`
    FOREIGN KEY (`user_id`)
    REFERENCES `dancedb`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
